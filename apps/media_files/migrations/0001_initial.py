# Generated by Django 4.2.7 on 2025-05-30 15:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import media_files.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaFileQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de fichiers audio')),
                ('video_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de fichiers vidéo')),
                ('photo_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de photos')),
                ('document_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de documents')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='media_quota', to='accounts.artistprofile', verbose_name='Artiste')),
            ],
            options={
                'verbose_name': 'Quota de Médias',
                'verbose_name_plural': 'Quotas de Médias',
                'db_table': 'media_files_quota',
            },
        ),
        migrations.CreateModel(
            name='VideoFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du fichier', max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, help_text='Description optionnelle du fichier', verbose_name='Description')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('is_active', models.BooleanField(default=True, help_text='Indique si le fichier est visible publiquement', verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans le portfolio", verbose_name='Ordre')),
                ('file_size', models.PositiveIntegerField(help_text='Taille du fichier en bytes', verbose_name='Taille du fichier')),
                ('file', models.FileField(blank=True, help_text='Fichier vidéo (MP4, AVI, MOV, WMV - 100MB max)', null=True, upload_to='media/video/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'avi', 'mov', 'wmv']), media_files.models.validate_video_size], verbose_name='Fichier vidéo')),
                ('video_url', models.URLField(blank=True, help_text='Lien YouTube, Vimeo ou autre plateforme', verbose_name='URL vidéo')),
                ('thumbnail', models.ImageField(blank=True, help_text='Image de prévisualisation de la vidéo', null=True, upload_to='media/video/thumbnails/%Y/%m/', verbose_name='Miniature')),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Durée en secondes', null=True, verbose_name='Durée')),
                ('has_watermark', models.BooleanField(default=False, help_text='Indique si le filigrane a été ajouté à la vidéo', verbose_name='Filigrane ajouté')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.artistprofile', verbose_name='Artiste')),
            ],
            options={
                'verbose_name': 'Fichier Vidéo',
                'verbose_name_plural': 'Fichiers Vidéo',
                'db_table': 'media_files_video',
                'indexes': [models.Index(fields=['artist', 'is_active'], name='media_files_artist__13ebb0_idx'), models.Index(fields=['upload_date'], name='media_files_upload__594d1d_idx')],
            },
        ),
        migrations.CreateModel(
            name='PhotoFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du fichier', max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, help_text='Description optionnelle du fichier', verbose_name='Description')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('is_active', models.BooleanField(default=True, help_text='Indique si le fichier est visible publiquement', verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans le portfolio", verbose_name='Ordre')),
                ('file_size', models.PositiveIntegerField(help_text='Taille du fichier en bytes', verbose_name='Taille du fichier')),
                ('file', models.ImageField(help_text='Image (JPG, PNG, GIF - 15MB max)', upload_to='media/photos/%Y/%m/', validators=[media_files.models.validate_photo_size], verbose_name='Photo')),
                ('is_profile_picture', models.BooleanField(default=False, help_text='Indique si cette photo est utilisée comme photo de profil', verbose_name='Photo de profil')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.artistprofile', verbose_name='Artiste')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
                'db_table': 'media_files_photo',
                'indexes': [models.Index(fields=['artist', 'is_active'], name='media_files_artist__6c4608_idx'), models.Index(fields=['is_profile_picture'], name='media_files_is_prof_b42059_idx'), models.Index(fields=['upload_date'], name='media_files_upload__4fac86_idx')],
            },
        ),
        migrations.CreateModel(
            name='DocumentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du fichier', max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, help_text='Description optionnelle du fichier', verbose_name='Description')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('is_active', models.BooleanField(default=True, help_text='Indique si le fichier est visible publiquement', verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans le portfolio", verbose_name='Ordre')),
                ('file_size', models.PositiveIntegerField(help_text='Taille du fichier en bytes', verbose_name='Taille du fichier')),
                ('file', models.FileField(help_text='Document PDF uniquement (10MB max)', upload_to='media/documents/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), media_files.models.validate_document_size], verbose_name='Document')),
                ('document_type', models.CharField(choices=[('partition', 'Partition'), ('press_kit', 'Press-kit'), ('contract', 'Contrat type'), ('rider', 'Rider technique'), ('biography', 'Biographie'), ('other', 'Autre')], default='other', help_text='Type de document', max_length=20, verbose_name='Type de document')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.artistprofile', verbose_name='Artiste')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'media_files_document',
                'indexes': [models.Index(fields=['artist', 'is_active'], name='media_files_artist__f4995a_idx'), models.Index(fields=['document_type'], name='media_files_documen_d63f96_idx'), models.Index(fields=['upload_date'], name='media_files_upload__78afc2_idx')],
            },
        ),
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du fichier', max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, help_text='Description optionnelle du fichier', verbose_name='Description')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('is_active', models.BooleanField(default=True, help_text='Indique si le fichier est visible publiquement', verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans le portfolio", verbose_name='Ordre')),
                ('file_size', models.PositiveIntegerField(help_text='Taille du fichier en bytes', verbose_name='Taille du fichier')),
                ('file', models.FileField(help_text='Fichier audio (MP3, WAV, OGG, M4A - 25MB max)', upload_to='media/audio/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav', 'ogg', 'm4a']), media_files.models.validate_audio_size], verbose_name='Fichier audio')),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Durée en secondes', null=True, verbose_name='Durée')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.artistprofile', verbose_name='Artiste')),
            ],
            options={
                'verbose_name': 'Fichier Audio',
                'verbose_name_plural': 'Fichiers Audio',
                'db_table': 'media_files_audio',
                'indexes': [models.Index(fields=['artist', 'is_active'], name='media_files_artist__4596f5_idx'), models.Index(fields=['upload_date'], name='media_files_upload__ea6f0b_idx')],
            },
        ),
    ]
