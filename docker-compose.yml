services:
  db:
    image: postgres:15-alpine
    container_name: talentzik_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./proxy/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - talentzik_network

  redis:
    image: redis:7-alpine
    container_name: talentzik_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    
    networks:
      - talentzik_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: talentzik_web
    restart: unless-stopped
    env_file:
      - .env
    command: /app/scripts/run.sh
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - talentzik_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: talentzik_celery
    restart: unless-stopped
    command: celery -A config worker --loglevel=info --concurrency=2
    env_file:
      - .env
    volumes:
      - media_volume:/app/media
      - logs_volume:/app/logs
    depends_on:
      - db
      - redis
      - web

    networks:
      - talentzik_network

  nginx:
    image: nginx:alpine
    container_name: talentzik_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./proxy/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    
    networks:
      - talentzik_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  talentzik_network:
    driver: bridge 